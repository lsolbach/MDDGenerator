<?
string fileComment(map element) {
?>/*
 * Interface of element <?name(element)?>
<?generationInfo(' * ')?>
 */
<?
}

map getImportMap(map element) {
	map importMap
	add(importMap, 'java.util.*')
	add(importMap, 'org.soulspace.modelling.base.*')
	add(importMap, 'org.soulspace.modelling.uml14.types.*')
	importMap
}

list getTypeAnnotationList(map element) {
	list typeAnnotationList = super(element)
	typeAnnotationList.add('@SuppressWarnings("unused")')
	typeAnnotationList
}

list getExtensionList(map element) {
	list extensionList = super(element)
	extensionList.add('XmiObject')
	extensionList
}


string properties(map element) {
	map attrMap = additionalPropertyMap(element)
	foreach attr | isAccessibleProperty(attr) <- element:AttributeList {
		attrMap.put(attr:Name, attr)
	}
	list keyList = attrMap.keyList()
	foreach attrKey <- keyList {	
		property(attrMap[attrKey])
	}
}

string associations(map element) {
	map assoMap
	foreach asso | isAccessibleAssociation(asso) <- element:AssociationList {
		assoMap.put(asso:Name, asso)
	}
	list keyList = assoMap.keyList()
	foreach assoKey <- keyList {	
		association(assoMap[assoKey])
	}
}
?>